defmodule Open890Web.Live.RadioSocketState do
  alias Open890.{AntennaState, BandRegisterState, FilterState, NoiseBlankState, NotchState, TransverterState}

  @init_socket [
    {:display_band_selector, false},
    {:radio_connection, nil},
    {:connection_state, nil},
    {:data_speed, nil},
    {:debug, false},
    {:active_frequency, 0},
    {:active_frequency_delta, 0},
    {:active_mode, :unknown},
    {:active_receiver, :a},
    {:active_transmitter, :a},
    {:agc, nil},
    {:antenna_state, %AntennaState{}},
    {:audio_gain, nil},
    {:audio_scope_data, []},
    {:band_scope_att, nil},
    {:band_scope_avg, nil},
    {:band_scope_data, []},
    {:band_scope_edges, nil},
    {:band_scope_mode, nil},
    {:band_scope_span, nil},
    {:band_scope_fixed_span, nil},
    {:display_screen_id, 0},
    {:filter_state, %FilterState{}},
    {:filter_high_freq, nil},
    {:filter_low_freq, nil},
    {:inactive_frequency, ""},
    {:inactive_mode, :unknown},
    {:inactive_receiver, :b},
    {:mic_gain, nil},
    {:bc, nil},
    {:nr, nil},
    {:cw_key_speed, nil},
    {:cw_delay, nil},
    {:alc_meter, 0},
    {:swr_meter, 0},
    {:comp_meter, 0},
    {:id_meter, 0},
    {:vd_meter, 0},
    {:temp_meter, 0},
    {:tx_state, :off},
    {:notch_state, %NotchState{}},
    {:noise_blank_state, %NoiseBlankState{}},
    {:power_level, nil},
    {:projected_active_receiver_location, ""},
    {:ref_level, 40},
    {:rf_gain, nil},
    {:rf_pre, 0},
    {:rf_att, 0},
    {:active_if_filter, nil},
    {:roofing_filter_data, %{a: nil, b: nil, c: nil}},
    {:s_meter, 0},
    {:ssb_data_filter_mode, nil},
    {:ssb_filter_mode, nil},
    {:theme, "kenwood"},
    {:transverter_state, %TransverterState{}},
    {:vfo_a_frequency, nil},
    {:vfo_b_frequency, nil},
    {:band_register_state, %BandRegisterState{}},
    {:vfo_memory_state, nil},
    {:waterfall_draw_interval, 1},
    {:spectrum_scale, 1.0},
    {:connection_state, :stopped},
    {:__ui_macros, %{}}
  ]

  def initial_state do
    @init_socket |> Enum.into(%{})
  end
end
