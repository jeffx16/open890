<div id="radio" class={radio_classes(@debug)} phx-window-keydown="window_keydown" phx-window-keyup="window_keyup">

  <%#-- disabled --%>
  <%= if false && @display_screen_id != 0 do %>
    <div id="menuModal" class="ui active modal">
      <div class="header">
        <a href="#"><i class="close window icon" phx-click="close_menu"></i></a>
      </div>
      <div class="content">
        <h2 class="header">Menu #<%= @display_screen_id %></h2>
        <div class="ui vertical stackable attached fluid menu">
          <%= render_menu_items(@display_screen_id) %>
        </div>
      </div>
    </div>
  <% end %>

  <%= if @display_band_selector do %>
    <div class="ui active page top aligned page dimmer" _phx-click="dimmer_clicked">
      <div id="BandModal" class="ui active modal" phx-hook="BandModal">
        <div class="header">
          <h1 class="ui huge header activeFrequency tip">
            <%= @radio_state.active_frequency |> format_raw_frequency() %>
            <div class="ui sub header activeMode tip"><%= @radio_state.active_mode |> format_mode() %></div>
          </h1>
        </div>
        <div class="content">
          <%= live_component BandButtonsComponent %>
        </div>
        <div class="actions">
          <div id="BandModalClose" class="ui icon button" phx-click="toggle_band_selector">
            <i class="close icon"></i>
            Close
          </div>
        </div>
      </div>
    </div>
  <% end %>
  <!-- top bar -->
  <div class="computer only tablet only row topBar">
    <div class="four wide column">
      <div class="ui grid">
        <div class="four wide column"><%= @radio_state.antenna_state.active_ant |> to_string() |> String.upcase() %></div>
        <div class="four wide column"><%= if @radio_state.antenna_state.rx_ant_enabled, do: "RX ANT" %></div>
        <div class="four wide column"><%= if @radio_state.antenna_state.ant_out_enabled, do: "ANT OUT" %></div>
        <div class="four wide column">
          <%= if @radio_state.agc do %>
            AGC<%= @radio_state.agc |> format_agc() %>
          <% end %>
        </div>
      </div>
    </div>

    <div class="eight wide column">
      <div class="ui grid">
        <div class="two wide column center aligned">
          <%= if @radio_state.tx_state == :tx_tune do %>
            <span class="txTune">TX TUNE</span>
          <% else %>
            <%= if @radio_state.transverter_state.enabled do %>
              <span class="xvtrIndicator enabled">XVTR</span>
            <% else %>
              <span class="xvtrIndicator disabled">XVTR</span>
            <% end %>
          <% end %>
        </div>

        <div class="two wide column center aligned">
          <%= if connection_startable?(@connection_state) do %>
            <span class="ui icon hover-pointer" phx-click="start_connection" data-tooltip="Start connection" data-position="bottom center">
              <i class="large play circle outline icon"></i>
            </span>
          <% else %>
            <span class="ui icon hover-pointer" phx-click="stop_connection" data-tooltip="Stop connection" data-position="bottom center">
              <i class="large stop circle outline icon"></i>
            </span>
          <% end %>
        </div>

        <!-- connection status -->
        <div class="eight wide center aligned column">
          <span class="connectionStatus">
            <span class="ui icon rotating">
              <%= connection_status_icon(@connection_state) %>
            </span>

            <%= format_connection_state(@connection_state) %>
          </span>
        </div>

        <div class="two wide center aligned column">
        </div>

        <div class="two wide right aligned column">
          <%= if @radio_state.antenna_state.drv_enabled, do: "DRV" %>

          <%= if @radio_state.power_level do %>
            <%= @radio_state.power_level %><%= if @radio_state.antenna_state.drv_enabled do %>%<% else %>W<% end %>
          <% end %>
        </div>

      </div>
    </div>

    <div class="four wide column">
      <div class="ui grid">
        <div class="eight wide column left aligned">
          <%= if @radio_state.active_mode in [:cw, :cw_r] && @radio_state.cw_key_speed do %>
            <%= @radio_state.cw_key_speed %>WPM
          <% else %>
            <%= if @radio_state.mic_gain do %>
              MIC: <%= @radio_state.mic_gain %>
            <% end %>
          <% end %>
        </div>
        <div class="eight wide column right aligned">
          <%= if @radio_state.active_mode in [:cw, :cw_r] && @radio_state.cw_delay do %>
            <%= if @radio_state.cw_delay == 0, do: "FULL-BK", else: "DELAY: #{@radio_state.cw_delay}" %>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <div class="computer only tablet only row">
    <div class="four wide column">

      <div class="row">
        <div class="column">
          <Meter.meter s_meter={@radio_state.s_meter} alc_meter={@radio_state.alc_meter} swr_meter={@radio_state.swr_meter} />
        </div>
      </div>

      <div class="row">
        <div class="column">
          <%= if @radio_state.audio_gain do %>
            <Slider.slider label="AF" value={@radio_state.audio_gain} click="audio_gain_changed" wheel="adjust_audio_gain" />
          <% end %>
        </div>
      </div>
      <div class="row">
        <div class="column">
          <%= if @radio_state.rf_gain do %>
            <Slider.slider label="RF" value={@radio_state.rf_gain} click="rf_gain_changed" wheel="adjust_rf_gain" />
          <% end %>
        </div>
      </div>
      <div class="row">
        <div class="column">
          <%= if @radio_state.squelch do %>
            <Slider.slider label="SQL" value={@radio_state.squelch} click="sql_changed" wheel="adjust_sql" />
          <% end %>
        </div>
      </div>
    </div>

    <div class="eight wide column center aligned">
      <div class="ui grid sixteen wide">
        <div id="frequencyDisplay" class="ui row">
          <%= case @radio_state.vfo_memory_state do %>
          <% :vfo -> %>
            <div class="eight column row">
              <%= live_component Open890Web.Live.VFODisplayComponent,
                active_frequency: @radio_state.active_frequency,
                active_mode: @radio_state.active_mode,
                active_receiver: @radio_state.active_receiver,
                inactive_receiver: @radio_state.inactive_receiver,
                inactive_frequency: @radio_state.inactive_frequency,
                inactive_mode: @radio_state.inactive_mode,
                transverter_state: @radio_state.transverter_state,
                vfo_memory_state: @radio_state.vfo_memory_state,
                notch_state: @radio_state.notch_state,
                band_register_state: @radio_state.band_register_state %>
            </div>
          <% :memory -> %>
            <div id="memoryDisplay" class="eight column row">
              <div class="column">
                <p>Memory display not implemented yet.</p>
              </div>
            </div>
          <% _ -> %>
          <% end %>
        </div> <!-- frequencyDisplay -->



        <div class="row equal width">
          <div class="column">
            <.vfo_mem_button value={@radio_state.vfo_memory_state} fluid />
          </div>

          <div class="column">
            <%= if @radio_state.vfo_memory_state == :vfo do %>
              <.vfo_equalize_button fluid />
            <% end %>
          </div>

          <div class="column">
            <%= if @radio_state.vfo_memory_state == :vfo do %>
              <.vfo_switch_button value={@radio_state.active_receiver} fluid />
            <% end %>
          </div>

          <div class="column">
            <.split_button value={@radio_state.split_enabled} fluid }/>
          </div>
        </div>





      </div>



    </div>

    <div class="four wide column right aligned">
      <AudioScope.audio_scope
        active_if_filter={@radio_state.active_if_filter}
        active_mode={@radio_state.active_mode}
        audio_scope_data={@radio_state.audio_scope_data}
        filter_state={@radio_state.filter_state}
        roofing_filter_data={@radio_state.roofing_filter_data}
        notch_state={@radio_state.notch_state}
        theme={@theme} />

      <div class="ui mini black buttons">
        <.filter_buttons />
      </div>

    </div>
  </div> <!-- row -->

  <div class="_row bandscopeContainer">

    <%= if @left_panel_open do %>
    <div class="bandscopePanel left ">
      <!-- left side panel contents -->

      <!-- tab buttons -->
      <div class="row">
        <div class="column">
          <div class="ui secondary inverted pointing two item menu">
            <a class={tab_classes("txrx", @active_tab)} phx-click="set_tab" phx-value-tab="txrx">TX/RX</a>
            <a class={tab_classes("scope", @active_tab)} phx-click="set_tab" phx-value-tab="scope">Scope</a>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="column">&nbsp;</div>
      </div>

      <!-- tab contents -->
      <div class="row">
        <div class="column">

            <div class={tab_panel_classes("txrx", @active_tab)}>

              <div class="ui two column grid row">

                <div class="column">
                  <.pre_button value={@radio_state.rf_pre} fluid />
                </div>

                <div class="column">
                  <.att_button value={@radio_state.rf_att} fluid />
                </div>

                <div class="column">
                  <.nr_button value={@radio_state.nr} fluid />
                </div>

                <div class="column">
                  <.bc_button value={@radio_state.bc} active_mode={@radio_state.active_mode} fluid />
                </div>

                <div class="column">
                  <.nb1_button value={@radio_state.noise_blank_state} fluid />
                </div>

                <div class="column">
                  <.nb2_button value={@radio_state.noise_blank_state} fluid />
                </div>

                <div class="column">
                  <.notch_button value={@radio_state.notch_state} fluid />
                </div>

                <div class="column">
                  <.notch_width_button value={@radio_state.notch_state} fluid />
                </div>
              </div>
            </div>

            <div class={tab_panel_classes("scope", @active_tab)}>
              <div class="column">
                <.scope_mode_button fluid band_scope_mode={@radio_state.band_scope_mode} />
              </div>
              <div class="column">
                <.scope_range_button fluid band_scope_mode={@radio_state.band_scope_mode} band_scope_span={@radio_state.band_scope_span} />
              </div>

                <%= case @radio_state.band_scope_mode do %>
                  <% :auto_scroll -> %>
                    <.cmd_button_2 cmd="BSE" fluid class="ui small black button">Shift</.cmd_button_2>
                  <% :fixed -> %>
                    <.cmd_button_2 cmd="BSE" fluid class="ui small black button">MKR.CTR</.cmd_button_2>
                  <% _ -> %>
                    <%= "" %>
                <% end %>

              <div class="column">
                <.ref_level_control value={@radio_state.ref_level} fluid />
              </div>

              <div class="column">
                <.band_scope_att_button band_scope_att={@radio_state.band_scope_att} fluid />
              </div>

              <div class="column">
                <.band_scope_avg_button band_scope_avg={@radio_state.band_scope_avg} fluid />
              </div>

              <div class="column">
                <.waterfall_speed_control value={@waterfall_draw_interval} fluid />
              </div>

              <div class="column">
                <.spectrum_scale_control value={@spectrum_scale} fluid />
              </div>

              <div class="column">
                <.data_speed_control value={@radio_state.data_speed} fluid />
              </div>

              <div class="column">
                <.pop_out_bandscope_button radio_connection={@radio_connection} fluid />
              </div>

            </div>
        </div>
      </div>

      <!-- macros -->
      <%= if @__ui_macros != %{} do %>
        <h4>Macros</h4>
        <div class="ui one column grid row">
          <%= for %{"label" => name} <- @__ui_macros do %>
            <div class="column">
              <div class="ui black fluid button" phx-click="run_macro" phx-value-name={name}><%= name %></div>
            </div>
          <% end %>
        </div>
      <% end %>
    </div>
    <% end %>

    <div class="bandscopePanel toggle" phx-click="toggle_panel"></div>

    <div class="bandscopePanel right ">
      <BandScope.bandscope
        active_frequency={@radio_state.active_frequency}
        inactive_frequency={@radio_state.inactive_frequency}
        active_mode={@radio_state.active_mode}
        band_scope_mode={@radio_state.band_scope_mode}
        band_scope_data={@radio_state.band_scope_data}
        band_scope_edges={@radio_state.band_scope_edges}
        band_scope_span={@radio_state.band_scope_span}
        filter_state={@radio_state.filter_state}
        theme={@theme}
        draw_interval={@waterfall_draw_interval}
        split_enabled={@radio_state.split_enabled}
        spectrum_scale={@spectrum_scale} />
    </div>
  </div>

</div> <!-- end radio -->

